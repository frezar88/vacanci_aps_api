"""init models

Revision ID: 7783a1e231dd
Revises: 
Create Date: 2024-11-04 14:55:28.557604

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7783a1e231dd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('city',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employment_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancy_title',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_experience',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacancy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('vacancy_title_id', sa.Integer(), nullable=False),
    sa.Column('salary', sa.String(length=130), nullable=True),
    sa.Column('work_experience_id', sa.Integer(), nullable=False),
    sa.Column('employment_rate_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['city.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['employment_rate_id'], ['employment_rate.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['vacancy_title_id'], ['vacancy_title.id'], onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['work_experience_id'], ['work_experience.id'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


    users = sa.Table('users', sa.MetaData(), autoload_with=op.get_bind())
    op.bulk_insert(
        users,
        [
            {
                'token': "lcXyAHOiWbmfQFnVdnheIX9KFzAKhMOnLnXuETYKSlhedvULTd",
                "name": "admin",
                "created_at": datetime.utcnow()
            },

        ]
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vacancy')
    op.drop_table('work_experience')
    op.drop_table('vacancy_title')
    op.drop_table('users')
    op.drop_table('employment_rate')
    op.drop_table('city')
    # ### end Alembic commands ###
